name: Docker Build and Push

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GIT_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64 
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/security:latest
            ghcr.io/${{ github.repository_owner }}/security:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max,compression=zstd

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache  

      - name: Calculate HMAC
        run: |
          SECRET="${{ secrets.WEBHOOK_SECRET }}"
          PAYLOAD='{"ref":"refs/heads/main"}'
          HMAC=$(echo -n "$PAYLOAD" | openssl dgst -sha1 -hmac "$SECRET" | sed 's/^.* //')

          echo "HMAC=$HMAC" >> $GITHUB_ENV

      - name: Trigger webhook
        run: |
          HMAC="${{ env.HMAC }}"
          
          curl -X POST https://webhooks.josedaniel.me/hooks/security \
          -H "Content-Type: application/json" \
          -H "X-Hub-Signature: sha1=$HMAC" \
          -d '{"ref":"refs/heads/main"}'
